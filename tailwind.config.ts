import defaultTheme from 'tailwindcss/defaultTheme';

/** @type {import('tailwindcss').Config} */
export default {
  content: ['./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}'],
  mode: 'jit',
  darkMode: 'class',
  theme: {
    colors: {
      transparent: 'transparent',
      current: 'currentColor',
      primary: {
        DEFAULT: 'hsl(var(--primary) / <alpha-value>)',
        container: 'hsl(var(--primary-container) / <alpha-value>)',
        0: 'hsl(var(--primary-0) / <alpha-value>)',
        10: 'hsl(var(--primary-10) / <alpha-value>)',
        20: 'hsl(var(--primary-20) / <alpha-value>)',
        25: 'hsl(var(--primary-25) / <alpha-value>)',
        30: 'hsl(var(--primary-30) / <alpha-value>)',
        35: 'hsl(var(--primary-35) / <alpha-value>)',
        40: 'hsl(var(--primary-40) / <alpha-value>)',
        50: 'hsl(var(--primary-50) / <alpha-value>)',
        60: 'hsl(var(--primary-60) / <alpha-value>)',
        70: 'hsl(var(--primary-70) / <alpha-value>)',
        80: 'hsl(var(--primary-80) / <alpha-value>)',
        90: 'hsl(var(--primary-90) / <alpha-value>)',
        95: 'hsl(var(--primary-95) / <alpha-value>)',
        98: 'hsl(var(--primary-98) / <alpha-value>)',
        99: 'hsl(var(--primary-99) / <alpha-value>)',
        100: 'hsl(var(--primary-100) / <alpha-value>)',
      },
      secondary: {
        DEFAULT: 'hsl(var(--secondary) / <alpha-value>)',
        container: 'hsl(var(--secondary-container) / <alpha-value>)',
        0: 'hsl(var(--secondary-0) / <alpha-value>)',
        10: 'hsl(var(--secondary-10) / <alpha-value>)',
        20: 'hsl(var(--secondary-20) / <alpha-value>)',
        25: 'hsl(var(--secondary-25) / <alpha-value>)',
        30: 'hsl(var(--secondary-30) / <alpha-value>)',
        35: 'hsl(var(--secondary-35) / <alpha-value>)',
        40: 'hsl(var(--secondary-40) / <alpha-value>)',
        50: 'hsl(var(--secondary-50) / <alpha-value>)',
        60: 'hsl(var(--secondary-60) / <alpha-value>)',
        70: 'hsl(var(--secondary-70) / <alpha-value>)',
        80: 'hsl(var(--secondary-80) / <alpha-value>)',
        90: 'hsl(var(--secondary-90) / <alpha-value>)',
        95: 'hsl(var(--secondary-95) / <alpha-value>)',
        98: 'hsl(var(--secondary-98) / <alpha-value>)',
        99: 'hsl(var(--secondary-99) / <alpha-value>)',
        100: 'hsl(var(--secondary-100) / <alpha-value>)',
      },
      tertiary: {
        DEFAULT: 'hsl(var(--tertiary) / <alpha-value>)',
        container: 'hsl(var(--tertiary-container) / <alpha-value>)',
        0: 'hsl(var(--tertiary-0) / <alpha-value>)',
        10: 'hsl(var(--tertiary-10) / <alpha-value>)',
        20: 'hsl(var(--tertiary-20) / <alpha-value>)',
        25: 'hsl(var(--tertiary-25) / <alpha-value>)',
        30: 'hsl(var(--tertiary-30) / <alpha-value>)',
        35: 'hsl(var(--tertiary-35) / <alpha-value>)',
        40: 'hsl(var(--tertiary-40) / <alpha-value>)',
        50: 'hsl(var(--tertiary-50) / <alpha-value>)',
        60: 'hsl(var(--tertiary-60) / <alpha-value>)',
        70: 'hsl(var(--tertiary-70) / <alpha-value>)',
        80: 'hsl(var(--tertiary-80) / <alpha-value>)',
        90: 'hsl(var(--tertiary-90) / <alpha-value>)',
        95: 'hsl(var(--tertiary-95) / <alpha-value>)',
        98: 'hsl(var(--tertiary-98) / <alpha-value>)',
        99: 'hsl(var(--tertiary-99) / <alpha-value>)',
        100: 'hsl(var(--tertiary-100) / <alpha-value>)',
      },
      neutral: {
        0: 'hsl(var(--tertiary-0) / <alpha-value>)',
        10: 'hsl(var(--tertiary-10) / <alpha-value>)',
        20: 'hsl(var(--tertiary-20) / <alpha-value>)',
        25: 'hsl(var(--tertiary-25) / <alpha-value>)',
        30: 'hsl(var(--tertiary-30) / <alpha-value>)',
        35: 'hsl(var(--tertiary-35) / <alpha-value>)',
        40: 'hsl(var(--tertiary-40) / <alpha-value>)',
        50: 'hsl(var(--tertiary-50) / <alpha-value>)',
        60: 'hsl(var(--tertiary-60) / <alpha-value>)',
        70: 'hsl(var(--tertiary-70) / <alpha-value>)',
        80: 'hsl(var(--tertiary-80) / <alpha-value>)',
        90: 'hsl(var(--tertiary-90) / <alpha-value>)',
        95: 'hsl(var(--tertiary-95) / <alpha-value>)',
        98: 'hsl(var(--tertiary-98) / <alpha-value>)',
        99: 'hsl(var(--tertiary-99) / <alpha-value>)',
        100: 'hsl(var(--tertiary-100) / <alpha-value>)',
        variant: {
          0: 'hsl(var(--tertiary-0) / <alpha-value>)',
          10: 'hsl(var(--tertiary-10) / <alpha-value>)',
          20: 'hsl(var(--tertiary-20) / <alpha-value>)',
          25: 'hsl(var(--tertiary-25) / <alpha-value>)',
          30: 'hsl(var(--tertiary-30) / <alpha-value>)',
          35: 'hsl(var(--tertiary-35) / <alpha-value>)',
          40: 'hsl(var(--tertiary-40) / <alpha-value>)',
          50: 'hsl(var(--tertiary-50) / <alpha-value>)',
          60: 'hsl(var(--tertiary-60) / <alpha-value>)',
          70: 'hsl(var(--tertiary-70) / <alpha-value>)',
          80: 'hsl(var(--tertiary-80) / <alpha-value>)',
          90: 'hsl(var(--tertiary-90) / <alpha-value>)',
          95: 'hsl(var(--tertiary-95) / <alpha-value>)',
          98: 'hsl(var(--tertiary-98) / <alpha-value>)',
          99: 'hsl(var(--tertiary-99) / <alpha-value>)',
          100: 'hsl(var(--tertiary-100) / <alpha-value>)',
        },
      },
      on: {
        primary: {
          DEFAULT: 'hsl(var(--on-primary) / <alpha-value>)',
          container: 'hsl(var(--on-primary-container) / <alpha-value>)',
        },
        secondary: {
          DEFAULT: 'hsl(var(--on-secondary) / <alpha-value>)',
          container: 'hsl(var(--on-secondary-container) / <alpha-value>)',
        },
        tertiary: {
          DEFAULT: 'hsl(var(--on-tertiary) / <alpha-value>)',
          container: 'hsl(var(--on-tertiary-container) / <alpha-value>)',
        },
        background: 'hsl(var(--on-background) / <alpha-value>)',
        surface: {
          DEFAULT: 'hsl(var(--on-surface) / <alpha-value>)',
          variant: 'hsl(var(--on-surface-variant) / <alpha-value>)',
        },
      },
      background: 'hsl(var(--background) / <alpha-value>)',
      surface: {
        DEFAULT: 'hsl(var(--surface) / <alpha-value>)',
        variant: 'hsl(var(--surface-variant) / <alpha-value>)',
        tint: 'hsl(var(--surface-tint) / <alpha-value>)',
      },
      outline: {
        DEFAULT: 'hsl(var(--outline) / <alpha-value>)',
        variant: 'hsl(var(--outline-variant) / <alpha-value>)',
      },
      shadow: 'hsl(var(--shadow) / <alpha-value>)',
      inverse: {
        primary: 'hsl(var(--inverse-primary) / <alpha-value>)',
        surface: 'hsl(var(--inverse-surface) / <alpha-value>)',
        on: {
          surface: 'hsl(var(--inverse-on-surface) / <alpha-value>)',
        },
      },
      scrim: 'hsl(var(--scrim) / <alpha-value>)',
    },
    screens: {
      mobile: { max: '840px' },
      tablet: { max: '1280px' },
    },
    fontSize: {
      'display-lg': ['3.563rem', { lineHeight: '4rem', letterSpacing: '-0.016rem', fontWeight: '400' }],
      'display-md': ['2.813rem', { lineHeight: '3.25rem', letterSpacing: '0rem', fontWeight: '400' }],
      'display-sm': ['2.25rem', { lineHeight: '2.75rem', letterSpacing: '0rem', fontWeight: '400' }],
      'title-lg': ['2rem', { lineHeight: '2.5rem', letterSpacing: '0rem', fontWeight: '400' }],
      'title-md': ['1.75rem', { lineHeight: '2.25rem', letterSpacing: '0rem', fontWeight: '400' }],
      'title-sm': ['1.5rem', { lineHeight: '2rem', letterSpacing: '0.031rem', fontWeight: '400' }],
      'headline-lg': ['1.375rem', { lineHeight: '1.75rem', letterSpacing: '0rem', fontWeight: '400' }],
      'headline-md': ['1rem', { lineHeight: '1.5rem', letterSpacing: '0.009rem', fontWeight: '500' }],
      'headline-sm': ['0.875rem', { lineHeight: '1.25rem', letterSpacing: '0.006rem', fontWeight: '500' }],
      'body-lg': ['1rem', { lineHeight: '1.5rem', letterSpacing: '0.031rem', fontWeight: '400' }],
      'body-md': ['0.875rem', { lineHeight: '1.25rem', letterSpacing: '0.016rem', fontWeight: '400' }],
      'body-sm': ['0.75rem', { lineHeight: '1rem', letterSpacing: '0.025rem', fontWeight: '400' }],
      'label-lg': ['0.875rem', { lineHeight: '1.25rem', letterSpacing: '0.006rem', fontWeight: '500' }],
      'label-md': ['0.75rem', { lineHeight: '1rem', letterSpacing: '0.031rem', fontWeight: '500' }],
      'label-sm': ['0.688rem', { lineHeight: '1rem', letterSpacing: '0.031rem', fontWeight: '500' }],
    },
    gridTemplateColumns: {
      lg:
        '[full-start] 1fr [aside-left-start] minmax(auto, 240px) [aside-left-end extra-start] 32px ' +
        '[content-start] min(680px, 100%) [content-end] ' +
        '32px [extra-end aside-right-start] minmax(auto, 240px) [aside-right-end] 1fr [full-end]',
      sm: '12px 12px auto 12px 12px',
    },
    gridTemplateAreas: {
      sm: [
        '. . aside-left . .',
        '. extra extra extra .',
        '. . content . .',
        '. . aside-right . .',
        'full full full full full',
      ],
    },
    gridColumn: {
      content: 'content',
      extra: 'extra',
      'aside-left': 'aside-left',
      'aside-right': 'aside-right',
      full: 'full',
    },
    gridColumnStart: {
      full: 'full-start',
      'aside-left': 'aside-left-start',
      extra: 'extra-start',
      content: 'content-start',
      'aside-right': 'aside-right-start',
    },
    gridColumnEnd: {
      full: 'full-end',
      'aside-left': 'aside-left-end',
      extra: 'extra-end',
      content: 'content-end',
      'aside-right': 'aside-right-end',
    },
    fontFamily: {
      geist: ["'Geist', sans-serif", ...defaultTheme.fontFamily.sans],
      inter: ["'Inter', sans-serif", ...defaultTheme.fontFamily.mono],
      code: [...defaultTheme.fontFamily.mono],
    },
  },
  plugins: [require('@savvywombat/tailwindcss-grid-areas')],
};
